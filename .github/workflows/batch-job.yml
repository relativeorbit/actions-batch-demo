# Batch process many image pairs
name: Batch
run-name: ${{ inputs.burstId }} 

on:
  workflow_dispatch:
    inputs:
      burstId:
        type: string
        required: true
        description: ESA Burst Identifier (RelativeObit, ID, Subswath)
        default: '064_136231_IW2'
      polarization:
        type: choice
        required: true
        description: Polarization
        default: 'VV'
        options: ['VV', 'VH', 'HH']
      looks:
        type: choice
        required: true
        description: Range x Azimuth Looks
        default: '20x4'
        options: ['20x4','10x2','5x1']
      apply_water_mask:
        description: 'Apply a water mask'
        required: true
        default: false
        type: boolean
      workflow_name:
        description: 'Custom workflow name'
        required: false
        default: 'Hyp3-ISCE2-Batch'
        type: string

  # Must duplicate inputs for workflow_call (https://github.com/orgs/community/discussions/39357)
  workflow_call:
    inputs:
      burstId:
        type: string
        required: true
      polarization:
        type: string
        required: true
      looks:
        type: string
        required: true
      apply_water_mask:
        type: boolean
        required: true
      workflow_name:
        type: string
        required: false


jobs:
  # The output of this job is a JSON mapping for a matrix job
  searchASF:
    runs-on: ubuntu-latest
    outputs:
      BURST_IDS: ${{ steps.asf-search.outputs.BURST_IDS }}
      MATRIX: ${{ steps.asf-search.outputs.MATRIX_PARAMS_COMBINATIONS }}
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Conda environment with Micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          cache-environment: true
          environment-file: environment.yml

      # https://words.yuvi.in/post/python-in-github-actions/
      - name: Search ASF for bursts
        id: asf-search
        shell:  bash -el -c "python -u {0}"
        run: | 
          import asf_search as asf
          import json
          import os

          results = asf.search(platform=[asf.PLATFORM.SENTINEL1], 
                               processingLevel=asf.PRODUCT_TYPE.BURST, 
                               polarization="${{ inputs.polarization }}",
                               fullBurstID="${{ inputs.burstId }}")
          print('Number of Acquisitions: ', len(results))
          burstIDs = [x.meta['native-id'] for x in results]
          # Oldest First 
          burstIDs.sort()
          print('\n'.join(burstIDs))

          # Create Matrix Job Mapping (JSON Array)
          NPAIRS = 1
          pairs = []
          for r in range(len(burstIDs) - NPAIRS):
            for s in range(1, NPAIRS + 1 ):
              ref = burstIDs[r]
              sec = burstIDs[r+s]
              shortname = f'{ref[14:22]}_{sec[14:22]}'
              pairs.append({'reference': ref, 'secondary': sec, 'name':shortname})
          matrixJSON = f'{{"include":{json.dumps(pairs)}}}'
          print(f'Number of Interferograms: {len(pairs)}')

          with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
            print(f'BURST_IDS={burstIDs}', file=f)
            print(f'MATRIX_PARAMS_COMBINATIONS={matrixJSON}', file=f)

  # A matrix job that calls a reuseable workflow
  hyp3-isce2:
    needs: searchASF
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.searchASF.outputs.MATRIX) }}
    name: ${{ matrix.name }}
    uses: ./.github/workflows/single-job.yml
    with:
      reference: ${{ matrix.reference }}
      secondary: ${{ matrix.secondary }} 
      looks: ${{ inputs.looks }}
      apply_water_mask: ${{ inputs.apply_water_mask }}
      workflow_name: ${{ matrix.name }}
    secrets: inherit